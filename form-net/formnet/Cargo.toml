[package]
authors = [
    "Andrew Smith as@formation.cloud"
]
description = "A service that uses innernet behind the scenes to coordinate the formation fog network."
edition = "2021"
license = "MIT"
name = "formnet"
publish = false
readme = "README.md"
version = "0.1.0"

[features]
integration = []

[lib]
path = "src/lib.rs"

[[bin]]
name = "formnet"
path = "src/main.rs"

[[bin]]
name = "formnet-vm-join"
path = "src/vm_join.rs"

[[bin]]
name = "formnet-up"
path = "src/formnet-up.rs"

[[example]]
name = "formnet-p2p"
path = "examples/formnet-p2p.rs"

[dependencies]
formnet-server = { path = "../server" }
client = { path = "../client" }
wireguard-control = { path = "../wireguard-control" }
form-types = { path = "../../form-types" }
tokio = { version = "1", features=["full"] }
futures = "0.3"
clap = { version = "4.5.23", features=["derive"] }
conductor = { git = "https://github.com/versatus/conductor.git" }
shared = { path = "../shared" }
ipnet = "2.9"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
async-trait = "0.1.83"
bincode = "1.3.3"
axum = { version = "0.7", features = ["tokio"] }
reqwest = { version = "0.12", features = ["json", "blocking"] }
log = "0.4"
simple_logger = "5.0.0"
log4rs = "1.3.0"
alloy-core = { version = "0.8.19", features = ["rand", "serde", "k256"]}
k256 = { version = "0.13", features = ["ecdsa"] }
rand_core = "0.6"
hex = "0.4.3"
ureq = { version = "2", default-features = false, features = ["json"] }
hostsfile = { path = "../hostsfile" }
publicip = { path = "../publicip" }
form-state = { path = "../../form-state/"}
url = "2"
crdts = { git = "http://github.com/Cryptonomikhan/rust-crdt", rev = "af3a3dd" }
hyper = { version = "0.14", default-features = false, features = [
  "http1",
  "server",
  "runtime",
  "stream",
] }
parking_lot = "0.12"
form-config = { path = "../../form-config" }
daemonize = "0.5"
colored = "3"
rand = "0.8"
# Dependencies for relay functionality
thiserror = "1.0"        # For better error handling
once_cell = "1.17"       # For lazy static initialization
ring = "0.16"            # For cryptographic operations
socket2 = { version = "0.5.2", features = ["all"] } # For UDP socket operations

[target.'cfg(target_os = "linux")'.dependencies]
socket2 = { version = "0.5.2", features = ["all"] }

[dev-dependencies]
random_word = { version = "0.4.3", features = ["en"] }
tempfile = "3.3.0"
